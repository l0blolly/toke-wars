generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DaoAddress {
  daoName String @map("dao_name") @db.VarChar
  address Bytes  @id(map: "dao_addresses_pk") @unique(map: "dao_addresses_address_uindex")
  daos    Dao    @relation("dao_addressesTodaos", fields: [daoName], references: [name], map: "dao_addresses_daos_name_fk")

  @@map("dao_addresses")
}

model Dao {
  name         String       @id(map: "daos_pk") @db.VarChar
  stage        Int
  coin         String       @db.VarChar
  coingeckoId  String       @map("coingecko_id") @db.VarChar
  daoAddresses DaoAddress[] @relation("dao_addressesTodaos")
  geckoInfo    GeckoInfo    @relation(fields: [coingeckoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "daos_gecko_info_id_fk")

  @@map("daos")
}

model Reactor {
  symbol       String     @db.VarChar
  coingeckoId  String?    @map("coingecko_id") @db.VarChar
  isStablecoin Boolean?   @default(false) @map("is_stablecoin")
  address      Bytes      @id(map: "reactors_pk") @unique(map: "reactors_address_b_uindex")
  geckoInfo    GeckoInfo? @relation(fields: [coingeckoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reactors_gecko_info_id_fk")

  @@map("reactors")
}

model Block {
  number    Int      @id(map: "blocks_pk")
  timestamp DateTime @db.Timestamptz(6)

  @@map("blocks")
}

model CycleHash {
  cycle Int    @id(map: "cycle_hashes_pk")
  hash  String @db.VarChar

  @@map("cycle_hashes")
}

model IpfsReward {
  address    Bytes
  cycle      Int
  data       Json    @db.Json
  amount     Decimal @db.Decimal
  cycleTotal Decimal @map("cycle_total") @db.Decimal

  @@id([cycle, address], map: "ipfs_rewards_pk")
  @@map("ipfs_rewards")
}

model RevenueToken {
  address Bytes  @id(map: "revenue_tokens_pk")
  symbol  String
  geckoId String @map("gecko_id")

  @@map("revenue_tokens")
}

model RevenueIgnoredTransaction {
  logIndex        Int
  transactionHash Bytes

  @@id([transactionHash, logIndex], map: "revenue_ignored_transactions_pk")
  @@map("revenue_ignored_transactions")
}

model Event {
  transactionHash  Bytes   @map("transaction_hash")
  logIndex         Int     @map("log_index")
  blockNumber      Int     @map("block_number")
  data             Bytes
  topics           Bytes[]
  address          Bytes
  transactionIndex Int     @map("transaction_index")
  removed          Boolean

  @@id([blockNumber, transactionIndex, logIndex], map: "events_pk")
  @@index([topics], map: "events_idx_topics", type: Gin)
  @@index([address], map: "events_address_index")
  @@map("events")
}

model Contract {
  name    String
  address Bytes  @id(map: "contracts_pk")

  @@map("contracts")
}

model GeckoInfo {
  id      String    @id(map: "gecko_info_pk")
  data    Json
  Dao     Dao[]
  Reactor Reactor[]

  @@map("gecko_info")
}
